name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'train_models.py'  # Déclenche uniquement si ce fichier change
      - '.github/workflows/ci_cd.yml'  # Déclenche uniquement si ce fichier change
  pull_request:
    branches:
      - main
    paths:
      - 'train_models.py'  # Déclenche uniquement si ce fichier change
      - '.github/workflows/ci_cd.yml'  # Déclenche uniquement si ce fichier change

jobs:
  train-models:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create models directory
        run: |
          mkdir -p models

      - name: Train and save models
        run: |
          python train_models.py  # Exécute le fichier d'entraînement

      - name: Commit and Push models
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
          # Récupérer les changements récents et rebase
          git pull --rebase origin main || (git rebase --abort && echo "Rebase failed, skipping")
          
          git add models/logistic_regression.pkl models/linear_svc.pkl models/knn.pkl
          git commit -m "Update models via GitHub Actions" || echo "No changes to commit"

          # Forcer le push si nécessaire
          git push origin main --force
          
  deploy-api:
    needs: train-models
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt

      - name: Deploy to Render using API
        run: |
          pip install requests
          SERVICE_ID="${{ secrets.RENDER_SERVICE_ID }}"
          API_TOKEN="${{ secrets.RENDER_TOKEN }}"
          curl -s -X POST \
            -H "Authorization: Bearer $API_TOKEN" \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -d '{
                  "clearCache": "do_not_clear"
                }' \
            "https://api.render.com/v1/services/$SERVICE_ID/deploys"
